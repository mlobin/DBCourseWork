@model DB2019Course.Models.Voting

@{
    ViewBag.Title = "Добавить";
}

<h2>Добавить</h2>


@using (Html.BeginForm("Create","Votings")) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.VoteNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VoteNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VoteNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Members, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Members, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Members, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Arrived, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Arrived, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Arrived, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Pro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Pro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Contra, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contra, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contra, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Not_Voted, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Not_Voted, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Not_Voted, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.Hidden("DisserId", (int)ViewBag.Defence.DisserId)
    @Html.Hidden("AuthorPass", (int)ViewBag.Defence.AuthorPass)
    @Html.Hidden("DefenceId", (int)ViewBag.Defence.Number)
    
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Добавить" class=".btn .btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("К защите", "Details", "Defences", new { author = ViewBag.Defence.AuthorPass, id = ViewBag.Defence.Number }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
